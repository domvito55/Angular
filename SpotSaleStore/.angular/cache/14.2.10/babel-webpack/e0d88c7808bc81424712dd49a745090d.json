{"ast":null,"code":"import _classCallCheck from \"D:/pCloudFolder/Repositories/Angular/SpotSaleStore/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/pCloudFolder/Repositories/Angular/SpotSaleStore/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { StaticDataSource } from \"./static.datasource\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./static.datasource\";\nexport var ProductRepository = /*#__PURE__*/(function () {\n  var ProductRepository = /*#__PURE__*/function () {\n    function ProductRepository(dataSource) {\n      var _this = this;\n\n      _classCallCheck(this, ProductRepository);\n\n      this.dataSource = dataSource;\n      this.products = [];\n      this.categories = [];\n      dataSource.getProducts().subscribe(function (data) {\n        _this.products = data;\n        _this.categories = data.map(function (p) {\n          return p.category;\n        }).filter(function (c, index, array) {\n          return array.indexOf(c) == index;\n        }).sort();\n      });\n    }\n\n    _createClass(ProductRepository, [{\n      key: \"getProducts\",\n      value: function getProducts() {\n        var category = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        return this.products.filter(function (p) {\n          return category == null || category == p.category;\n        });\n      }\n    }, {\n      key: \"getProduct\",\n      value: function getProduct(id) {\n        return this.products.find(function (p) {\n          return p._id == id;\n        });\n      }\n    }, {\n      key: \"getCategories\",\n      value: function getCategories() {\n        return this.categories;\n      } // saveProduct(product: Product): Observable<Product> {\n      //     return this.dataSource.saveProduct(product);\n      // }\n\n    }, {\n      key: \"saveProduct\",\n      value: function saveProduct(product) {\n        var _this2 = this;\n\n        if (product._id == null || product._id == \"\") {\n          this.dataSource.saveProduct(product).subscribe(function (p) {\n            return _this2.products.push(p);\n          });\n\n          if (!this.categories.includes(product.category)) {\n            this.categories.push(product.category);\n          }\n        } else {\n          this.dataSource.updateProduct(product).subscribe(function (p) {\n            _this2.products.splice(_this2.products.findIndex(function (p) {\n              return p._id == product._id;\n            }), 1, product);\n          });\n        }\n      }\n    }, {\n      key: \"deleteProduct\",\n      value: function deleteProduct(id) {\n        var _this3 = this;\n\n        this.dataSource.deleteProduct(id).subscribe(function (p) {\n          _this3.products.splice(_this3.products.findIndex(function (p) {\n            return p._id == id;\n          }), 1);\n\n          _this3.categories = _this3.products.map(function (p) {\n            return p.category;\n          }).filter(function (c, index, array) {\n            return array.indexOf(c) == index;\n          }).sort();\n        });\n      }\n    }]);\n\n    return ProductRepository;\n  }();\n\n  ProductRepository.ɵfac = function ProductRepository_Factory(t) {\n    return new (t || ProductRepository)(i0.ɵɵinject(i1.StaticDataSource));\n  };\n\n  ProductRepository.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductRepository,\n    factory: ProductRepository.ɵfac\n  });\n  return ProductRepository;\n})();","map":null,"metadata":{},"sourceType":"module"}
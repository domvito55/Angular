{"ast":null,"code":"import _asyncToGenerator from \"D:/pCloudFolder/Repositories/Angular/SpotSaleStore/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./rest.datasource\";\nexport let ProductRepository = /*#__PURE__*/(() => {\n  class ProductRepository {\n    //constructor\n    constructor(dataSource) {\n      this.dataSource = dataSource; //properties\n\n      this.products = [];\n      this.categories = [];\n      this.listReady = false;\n      dataSource.getProducts().subscribe(data => {\n        this.products = data;\n        this.categories = data.map(p => p.category).filter((c, index, array) => array.indexOf(c) == index).sort();\n      });\n    } //Methods\n    //_CRUD\n    //__Read methods\n\n\n    getProducts(category = null) {\n      // console.log(this.products\n      //     .filter(p => category == null || category == p.category)\n      //     .sort((a, b) =>{return (a.title > b.title)? 1 : -1;}));\n      return this.products.filter(p => category == null || category == p.category).sort((a, b) => {\n        return a.title > b.title ? 1 : -1;\n      });\n    }\n\n    getProduct(id) {\n      return this.products.find(p => p._id == id);\n    }\n\n    setProduct() {\n      this.listReady = false;\n      this.dataSource.getProducts().subscribe(data => {\n        this.products = data;\n        this.listReady = true;\n      });\n    }\n\n    getCategories() {\n      return this.categories;\n    } //__Create and update method\n\n\n    saveProduct(product) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        //Create\n        if (product._id == null || product._id == \"\") {\n          _this.dataSource.saveProduct(product).subscribe(response => _this.products.push(response));\n\n          if (!_this.categories.includes(product.category)) {\n            _this.categories.push(product.category);\n          } //Update\n\n        } else {\n          _this.dataSource.updateProduct(product).subscribe(response => {\n            _this.products.splice(_this.products.findIndex(response => response._id == product._id), 1, product);\n          });\n        }\n      })();\n    } //Delete\n\n\n    deleteProduct(id) {\n      this.dataSource.deleteProduct(id).subscribe(p => {\n        this.products.splice(this.products.findIndex(p => p._id == id), 1);\n        this.categories = this.products.map(p => p.category).filter((c, index, array) => array.indexOf(c) == index).sort();\n      });\n    }\n\n  }\n\n  ProductRepository.ɵfac = function ProductRepository_Factory(t) {\n    return new (t || ProductRepository)(i0.ɵɵinject(i1.RestDataSource));\n  };\n\n  ProductRepository.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductRepository,\n    factory: ProductRepository.ɵfac\n  });\n  return ProductRepository;\n})();","map":null,"metadata":{},"sourceType":"module"}
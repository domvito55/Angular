{"ast":null,"code":"import _asyncToGenerator from \"D:/pCloudFolder/Repositories/Angular/SpotSaleStore/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./rest.datasource\";\nexport class ProductRepository {\n  //constructor\n  constructor(dataSource) {\n    this.dataSource = dataSource; //properties\n\n    this.products = [];\n    this.categories = [];\n    this.listReady = false;\n    dataSource.getProducts().subscribe(data => {\n      this.products = data;\n      this.categories = data.map(p => p.category).filter((c, index, array) => array.indexOf(c) == index).sort();\n    });\n  } //Methods\n  //_CRUD\n  //__Read methods\n\n\n  getProducts(category = null) {\n    return this.products.filter(p => category == null || category == p.category).sort((a, b) => parseFloat(a.title) - parseFloat(b.title));\n  }\n\n  getProduct(id) {\n    return this.products.find(p => p._id == id);\n  }\n\n  setProduct() {\n    this.listReady = false;\n    this.dataSource.getProducts().subscribe(data => {\n      this.products = data;\n      this.listReady = true;\n    });\n  }\n\n  getCategories() {\n    return this.categories;\n  } //__Create and update method\n\n\n  saveProduct(product) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //Create\n      if (product._id == null || product._id == \"\") {\n        _this.dataSource.saveProduct(product).subscribe(response => _this.products.push(response));\n\n        if (!_this.categories.includes(product.category)) {\n          _this.categories.push(product.category);\n        } //Update\n\n      } else {\n        _this.dataSource.updateProduct(product).subscribe(response => {\n          _this.products.splice(_this.products.findIndex(response => response._id == product._id), 1, product);\n        });\n      }\n    })();\n  } //Delete\n\n\n  deleteProduct(id) {\n    this.dataSource.deleteProduct(id).subscribe(p => {\n      this.products.splice(this.products.findIndex(p => p._id == id), 1);\n      this.categories = this.products.map(p => p.category).filter((c, index, array) => array.indexOf(c) == index).sort();\n    });\n  }\n\n}\n\nProductRepository.ɵfac = function ProductRepository_Factory(t) {\n  return new (t || ProductRepository)(i0.ɵɵinject(i1.RestDataSource));\n};\n\nProductRepository.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductRepository,\n  factory: ProductRepository.ɵfac\n});","map":{"version":3,"mappings":"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","names":["ProductRepository","constructor","dataSource","getProducts","subscribe","data","products","categories","map","p","category","filter","c","index","array","indexOf","sort","a","b","parseFloat","title","getProduct","id","find","_id","setProduct","listReady","getCategories","saveProduct","product","response","push","includes","updateProduct","splice","findIndex","deleteProduct","i0","factory"],"sourceRoot":"","sources":["D:\\pCloudFolder\\Repositories\\Angular\\SpotSaleStore\\src\\app\\model\\product.repository.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Product } from \"./product.model\";\r\nimport { RestDataSource } from \"./rest.datasource\";\r\nimport { ResponseModel } from \"./response.model\";\r\n\r\n\r\n@Injectable()\r\nexport class ProductRepository {\r\n    //properties\r\n    private products: Product[] = [];\r\n    private categories: string[] = [];\r\n    listReady: boolean = false;\r\n\r\n    //constructor\r\n    constructor(private dataSource: RestDataSource) {\r\n        dataSource.getProducts().subscribe(data => {\r\n            this.products = data;\r\n            this.categories = data.map(p => p.category)\r\n                .filter((c, index, array) => array.indexOf(c) == index).sort();\r\n        });\r\n    }\r\n\r\n    //Methods\r\n    //_CRUD\r\n    //__Read methods\r\n    getProducts(category: string = null): Product[] {\r\n        return this.products\r\n            .filter(p => category == null || category == p.category)\r\n            .sort((a, b) => parseFloat(a.title) - parseFloat(b.title));\r\n    }\r\n    getProduct(id: string): Product {\r\n        return this.products.find(p => p._id == id);\r\n    }\r\n\r\n    setProduct(){\r\n        this.listReady = false;\r\n        this.dataSource.getProducts().subscribe(data => {\r\n            this.products = data;\r\n            this.listReady = true;\r\n        });\r\n    }\r\n\r\n    getCategories(): string[] {\r\n        return this.categories;\r\n    }\r\n    //__Create and update method\r\n    async saveProduct(product: Product) {\r\n        //Create\r\n        if (product._id == null || product._id == \"\") {\r\n            this.dataSource.saveProduct(product)\r\n                .subscribe(response => this.products.push(response));\r\n                if(!this.categories.includes(product.category)){\r\n                    this.categories.push(product.category);\r\n                }\r\n        //Update\r\n        } else {\r\n            this.dataSource.updateProduct(product)\r\n                .subscribe(response => {\r\n                    this.products.splice(this.products.\r\n                        findIndex(response => response._id == product._id), 1, product);\r\n                });\r\n        }\r\n    }\r\n    //Delete\r\n    deleteProduct(id: string) {\r\n        this.dataSource.deleteProduct(id).subscribe(p => {\r\n            this.products.splice(this.products.\r\n                findIndex(p => p._id == id), 1);\r\n            this.categories = this.products.map(p => p.category)\r\n                .filter((c, index, array) => array.indexOf(c) == index).sort();\r\n        })\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}
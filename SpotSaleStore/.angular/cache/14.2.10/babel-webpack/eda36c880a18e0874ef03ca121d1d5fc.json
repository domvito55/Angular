{"ast":null,"code":"import { ViewContainerRef, TemplateRef, SimpleChanges } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport let CounterDirective = /*#__PURE__*/(() => {\n  class CounterDirective {\n    constructor(container, template) {\n      this.container = container;\n      this.template = template;\n    }\n\n    ngOnChanges(changes) {\n      this.container.clear();\n\n      for (let i = 0; i < this.counter; i++) {\n        this.container.createEmbeddedView(this.template, new CounterDirectiveContext(i + 1));\n      }\n    }\n\n  }\n\n  CounterDirective.ɵfac = function CounterDirective_Factory(t) {\n    return new (t || CounterDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n\n  CounterDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: CounterDirective,\n    selectors: [[\"\", \"counterOf\", \"\"]],\n    inputs: {\n      counter: [\"counterOf\", \"counter\"]\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return CounterDirective;\n})();\n\nclass CounterDirectiveContext {\n  constructor($implicit) {\n    this.$implicit = $implicit;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}